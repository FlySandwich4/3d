/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { JSX, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
	nodes: {
		mesh_0: THREE.Mesh;
		mesh_1: THREE.Mesh;
	};
	materials: {};
};

export function PianoModel(props: JSX.IntrinsicElements["group"]) {
	const groupRef = useRef<THREE.Group>(null);
	const { nodes, _materials } = useGLTF("/piano.glb") as unknown as GLTFResult;

	useFrame((state, delta) => {
		if (groupRef.current) {
			groupRef.current.rotation.y += delta; // adjust speed by changing delta multiplier
		}
	});

	
	return (
		<group {...props} dispose={null} ref={groupRef}>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.mesh_0.geometry}
				material={nodes.mesh_0.material}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.mesh_1.geometry}
				material={nodes.mesh_1.material}
			/>
		</group>
	);
}

useGLTF.preload("/piano.glb");
